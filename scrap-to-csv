import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

public class JobScraper {

	public static void main(String[] args) throws IOException, ParseException {

		List<Job> jobs = new ArrayList<>();

		// Connect to the web page
		Document document = Jsoup.connect("http://www.example.com/jobs").get();

		// Get the list of jobs on the web page
		Elements jobElements = document.select("div.jobs-listing");

		// Loop through each job
		for (Element jobElement : jobElements) {

			// Get the job detail elements
			Elements jobDetailElements = jobElement.select("div.job-details");

			// Create a new Job object
			Job job = new Job();

			// Set the job title
			job.setTitle(jobElement.select("h2 a").text());

			// Set the job location
			job.setLocation(jobDetailElements.select("span.location").text());

			// Set the job description
			job.setDescription(jobDetailElements.select("p.description").text());

			// Add the job to the list
			jobs.add(job);
		}

		// Write the job list to the CSV file
		CSVWriter.writeCSV(jobs);

	}

}

const puppeteer = require('puppeteer');
const csvWriter = require('csv-writer'); 
const fs = require('fs');

(async function main(){
    const browser = await puppeteer.launch();
    const page = await browser.newPage();
    await page.goto('https://www.example.com/jobs');
    await page.waitFor({timeout: 10000});
    const results = await page.evaluate(() => {
        let jobs = [];
        // select job listing elements
        const listingElements = document.querySelectorAll('.job-listing');
        // loop through each job listing element
        listingElements.forEach(element => {
            let title = element.querySelector('.job-title').innerText;
            let company = element.querySelector('.company-name').innerText;
            let link = element.querySelector('a').href;
    
            // add job details to array
            jobs.push({
                title,
                company,
                link
            });
        });
        return jobs;       
    });
    // create a csv writer
    const csvWriter = createCsvWriter({
        path: 'jobs.csv',
        header: [
            {id: 'title', title: 'Job Title'},
            {id: 'company', title: 'Company'},
            {id: 'link', title: 'Link'},
        ]
    });
    // write jobs to csv file
    csvWriter.writeRecords(results);
    // close the browser
    await browser.close();
})()
